<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[macguff's blog]]></title>
        <description><![CDATA[胡思乱想]]></description>
        <link>http://macguff.github.io/</link>
        <generator>RSS for Node</generator>
        <lastBuildDate>Thu, 31 Aug 2023 16:25:09 GMT</lastBuildDate>
        <atom:link href="http://macguff.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[[review]软件框架设计的艺术]]></title>
            <description><![CDATA[<h1 id="review软件框架设计的艺术">[review]软件框架设计的艺术</h1>
<p><a href="https://book.douban.com/subject/6003832/">https://book.douban.com/subject/6003832/</a></p>
<blockquote>
<p>“无绪”这个词并不是一个贬义词。我们只是用它区别两种层次的理解水平。有一种理解可以称为
“浅层理解”，它是指对一种事务的了解程度只限于掌握使用方法即可；还有一种理解则可以称为
“深层理解”，是指对某种事务背后的原则、规律有所掌握。</p>
</blockquote>
<p>“浅层理解”可以对应为“了解”，“深层理解”可以对应为“精通”。</p>
<blockquote>
<p>向API中添加一个新方法是很容易的一件事，但与此相反，想从API中移除一个方法却非常困难。</p>
</blockquote>
<blockquote>
<p>在发布API的第一个版本之前，将不必要的内容从API中移走。</p>
</blockquote>
<blockquote>
<p>如同物理学比几何学能对真实的世界做出更合理的描述，面向对象语言也比认为比传统的面向过程语言更适合处理真实世界的各种概念。</p>
</blockquote>
]]></description>
            <link>http://macguff.github.io/blog/post/practical-api-design.html</link>
            <guid isPermaLink="false">practical-api-design</guid>
            <dc:creator><![CDATA[macguff]]></dc:creator>
            <pubDate>Tue, 28 Jun 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[收藏]]></title>
            <description><![CDATA[<h1 id="收藏">收藏</h1>
<ol>
<li><a href="http://blog.code-cop.org/2020/05/learning-yet-another-programming.html">Learning yet another Programming Language</a><blockquote>
<p>学习编程语言的方法论</p>
</blockquote>
</li>
</ol>
]]></description>
            <link>http://macguff.github.io/blog/post/digest.html</link>
            <guid isPermaLink="false">digest</guid>
            <dc:creator><![CDATA[macguff]]></dc:creator>
            <pubDate>Sun, 29 Nov 2020 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[搭建博客]]></title>
            <description><![CDATA[<h1 id="搭建博客">搭建博客</h1>
<h2 id="安装">安装</h2>
<p>全局安装：</p>
<pre><code class="language-sh">&gt; npm install amberpine -g</code></pre>
<h2 id="初始化：">初始化：</h2>
<pre><code class="language-sh">&gt; mkdir blog
&gt; cd blog
&gt; abp i</code></pre>
<p>在当前目录生成结构：</p>
<ol>
<li>source 目录存放博客文章列表。</li>
<li>assets 目录中存放静态资源，包含一个必须的 index.css 文件，可修改此文件来改变样式。</li>
</ol>
<h2 id="预览">预览</h2>
<pre><code class="language-sh">&gt; abp d</code></pre>
<p>启动本地server，访问<code>localhost:8080</code>即可预览。参考 source/first-post 目录中的 yaml 文件和 md 文件进行写作，文章编辑保存时，浏览器会自动刷新以体现最新的进展。</p>
<h2 id="构建">构建</h2>
<pre><code>&gt; abp</code></pre><p>执行此命令将在 dist 目录下生成完整的站点，包含一个首页 index.html 和每篇文章的一个 html 页。目录树如下：</p>
<pre><code class="language-sh">.
├── assets
│   ├── index.css
│   └── lanscape.jpg
├── dist
│   ├── blog
│   └── index.html
└── source
    ├── 1
    ├── blog.yaml
    └── first-post</code></pre>
<h2 id="发布">发布</h2>
<p>一般情况下，将 dist 目录作为根目录完整地发布到任何静态文件服务器即可。这里使用<code>github-pages</code>服务。</p>
<h3 id="新建github仓库">新建github仓库</h3>
<p>在GitHub新建一个托管博客的仓库，这里命名为<code>blog</code>。</p>
<p>github-pages要求将静态文件内容放在仓库的<code>gh-pages</code>分支，才可访问到。所以，blog项目有两个分支：</p>
<ul>
<li>master, 保存博客的源码</li>
<li>gh-pages, 保存生成的html文件</li>
</ul>
<p>可通过如下地址访问：</p>
<pre><code>&lt;username&gt;.github.io/&lt;project&gt;</code></pre><p>这里的<code>&lt;username&gt;</code>填你的github帐号名，<code>&lt;project&gt;</code>填项目名。比如本博客可访问地址为：
<code>macguff.github.io/blog</code>。</p>
<h3 id="创建gh-pages分支">创建gh-pages分支</h3>
<p>执行如下命令来创建分支，并且删除不需要的文件：</p>
<pre><code class="language-sh">$ git checkout --orphan gh-pages
$ git rm --cached -r .
$ git clean -df</code></pre>
<p>现在，目录下应该只剩下 <code>dist</code> 目录了，首先，忽略一些文件：</p>
<pre><code class="language-sh">$ echo &quot;dist&quot; &gt;&gt; .gitignore
$ git add .gitignore
$ git commit -m &quot;Ignore some files&quot;</code></pre>
<p>然后，加入 dist 下的内容到分支中</p>
<pre><code>$ cp -r dist/* .
$ git add .
$ git commit -m &quot;publish&quot;</code></pre><h3 id="上传至github">上传至GitHub</h3>
<p>现在，可以生成的静态内容上传到 <code>GitHub</code> 中 blog 项目的 gh-pages 分支了</p>
<pre><code class="language-bash">$ git push -u origin gh-pages</code></pre>
<p>现在，博客的内容已经上传到 GitHub 上，所以通过访问 macguff.github.io/blog 就可以访问博客了！</p>
<p>(完)</p>
]]></description>
            <link>http://macguff.github.io/blog/post/hello.html</link>
            <guid isPermaLink="false">hello</guid>
            <dc:creator><![CDATA[macguff]]></dc:creator>
            <pubDate>Sun, 25 Oct 2020 00:00:00 GMT</pubDate>
        </item>
    </channel>
</rss>